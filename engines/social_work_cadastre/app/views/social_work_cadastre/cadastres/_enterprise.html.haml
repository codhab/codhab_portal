%hr/
.row
  .col-md-12
    %br/
    
    - unless @cadastre.steps.where(step: 1).present?
      = simple_form_for [@cadastre, @step], url: cadastre_cadastre_steps_path(@cadastre), remote: true do |f|
        = f.input :step, as: :hidden, input_html: {value: 1}
        = f.button :submit, "Finalizar Etapa", class: 'piscapisca'
    %br/
    %br/
    - begin
      - @act = @cadastre.observations.last.active
    - rescue
      - nil
    - if @cadastre.observations.present? && @act == true
      %table.table.table-striped.table-condensed.table-bordered
        %thead
          %tr
            %th{style: 'background-color: #ff433f; color: #ffff'} Observação da Comissão de Credenciamento:
            %th.collapsing{style: 'background-color: #ff433f; color: #ffff'} Tipo:
        %tbody
          %tr
            %td= @cadastre.observations.last.observation
            %td= @cadastre.observations.last.status ? 'Interno' : 'Externo'
    .row
      .col-md-3
        %table.table.table-striped.table-condensed.table-bordered
          %thead
            %th Status da Inscrição
          %tbody
            %td.collapsing= @cadastre.situation
    %table.table.table-striped.table-condensed.table-bordered
      %thead
        %tr
          %th Razão social
          %th=@cadastre.crea_cau? ? "CREA" : "CAU" rescue nil
          %th Cnpj
          %th Recursos tecnológicos
          %th
      %tbody
        %tr
          %td= @cadastre.social_reason
          %td= @cadastre.crea
          %td= @cadastre.cnpj
          %td
            - if @cadastre.technological_resources == true
              = 'Sim'
            - else
              = 'Não'
          -# - @date_finish = Time.now
          -# -if @date_finish < Date.parse('2018-06-22')
          - if @cadastre.situation != "Habilitado"
            %td= link_to "<i class='glyphicon glyphicon-pencil'></i>".html_safe, edit_cadastre_path(@cadastre),title: "Editar", class: 'btn btn-warning btn-sm', remote: true
  .col-md-12
    %h4
      %b Contato
    %table.table.table-striped.table-condensed.table-bordered
      %thead
        %tr
          %th Rua, avenida, n° e complemento
          %th Bairro
          %th Município
          %th UF
      %tbody
        %tr
          %td= @cadastre.address
          %td= @cadastre.district
          %td= @cadastre.city.name rescue nil
          %td= Core::Address::State.find(@cadastre.uf).name rescue nil
      %thead
        %tr
          %th E-mail
          %th Telefone
          %th Celular
          %th CEP
      %tbody
        %tr
          %td= @cadastre.email
          %td= @cadastre.telephone
          %td= @cadastre.celphone
          %td= @cadastre.cep
= render 'members'
= render 'technical'
= render 'declaration'


:javascript
  setInterval(function() {
    $('.piscapisca').animate( { backgroundColor: '#2FB62D' }, 300)
    .animate( { backgroundColor: '#BDFEBD' }, 300);
  }, 1000);